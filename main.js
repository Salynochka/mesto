(()=>{"use strict";var t={d:(e,n)=>{for(var o in n)t.o(n,o)&&!t.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:n[o]})},o:(t,e)=>Object.prototype.hasOwnProperty.call(t,e),p:""};function e(t){return e="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},e(t)}function n(t,n){for(var o=0;o<n.length;o++){var r=n[o];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,i=function(t,n){if("object"!==e(t)||null===t)return t;var o=t[Symbol.toPrimitive];if(void 0!==o){var r=o.call(t,"string");if("object"!==e(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===e(i)?i:String(i)),r)}var i}t.d({},{$:()=>tt,R:()=>K});var o=function(){function t(e,n){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._variablesForValidation=e,this._form=n,this._inputList=Array.from(this._form.querySelectorAll(this._variablesForValidation.inputSelector)),this._buttonSubmit=this._form.querySelector(this._variablesForValidation.submitButtonSelector)}var e,o;return e=t,(o=[{key:"_showError",value:function(t,e){t.textContent=e,t.classList.add(this._variablesForValidation.errorActiveClass)}},{key:"_hideError",value:function(t){t.classList.remove(this._variablesForValidation.errorActiveClass),t.textContent=""}},{key:"_disableButton",value:function(t){t.classList.add(this._variablesForValidation.inactiveButtonClass),t.disabled=!0}},{key:"_enableButton",value:function(t){t.classList.remove(this._variablesForValidation.inactiveButtonClass),t.disabled=!1}},{key:"_checkInputValidity",value:function(t){var e=this._form.querySelector("".concat(this._variablesForValidation.inputErrorTemplate).concat(t.name));t.validity.valid?(this._hideError(e),t.classList.remove(this._variablesForValidation.errorPopupItemClass)):(this._showError(e,t.validationMessage),t.classList.add(this._variablesForValidation.errorPopupItemClass))}},{key:"_hasInvalidInput",value:function(){return Array.from(this._inputList).some((function(t){return!t.validity.valid}))}},{key:"toggleButtonState",value:function(){this._hasInvalidInput(this._inputList)?this._disableButton(this._buttonSubmit):this._enableButton(this._buttonSubmit)}},{key:"resetValidation",value:function(){var t=this;this.toggleButtonState(),this._inputList.forEach((function(e){var n=t._form.querySelector("".concat(t._variablesForValidation.inputErrorTemplate).concat(e.name));t._hideError(n),e.classList.remove(t._variablesForValidation.errorPopupItemClass)}))}},{key:"_setEventListeners",value:function(){var t=this;this._form.addEventListener("submit",(function(t){t.preventDefault()})),this.toggleButtonState(),this._inputList.forEach((function(e){e.addEventListener("input",(function(){t._checkInputValidity(e),t.toggleButtonState()}))}))}},{key:"enableValidation",value:function(){this._setEventListeners()}}])&&n(e.prototype,o),Object.defineProperty(e,"prototype",{writable:!1}),t}();t.p,t.p,t.p,t.p,t.p,t.p;var r={formSelector:".popup__form",inputSelector:".popup__item",inputErrorTemplate:".popup__form-error_type_",errorActiveClass:"popup__form-error_active",submitButtonSelector:".popup__button",inactiveButtonClass:"popup__button_disabled",errorPopupItemClass:"popup__item_error"},i=document.querySelector(".popup-edit__form"),a=document.querySelector(".popup-add__form"),u=document.querySelector(".popup-update__form"),c=document.querySelector(".popup__item_type_name"),l=document.querySelector(".popup__item_type_job"),s=(document.querySelector(".popup__form-error_type_link"),document.querySelector(".profile__name")),f=document.querySelector(".profile__description"),p=document.querySelector(".profile__photo"),y=document.querySelector(".popup-edit"),d=document.querySelector(".popup-add"),h=document.querySelector(".popup-update"),m=document.querySelector(".popup-confirmation"),b=document.querySelector(".profile__changes"),v=document.querySelector(".profile__button-add"),_=document.querySelector(".card__template").content,S=document.querySelector(".popup-increase");function g(t){return g="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},g(t)}function w(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,(void 0,r=function(t,e){if("object"!==g(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var o=n.call(t,"string");if("object"!==g(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(o.key),"symbol"===g(r)?r:String(r)),o)}var r}var k=function(){function t(e,n,o,r){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._link=e.link,this._alt=e.name,this._name=e.name,this._like=e.like,this._userId=r,this._ownerId=e.ownerId,this._cardId=e.cardId,this._cardTemplate=n,this.handleCardClick=o}var e,n;return e=t,(n=[{key:"_getTemplate",value:function(){return this._cardTemplate.querySelector(".card").cloneNode(!0)}},{key:"generateCard",value:function(){return this._element=this._getTemplate(),this._cardPhoto=this._element.querySelector(".card__photo"),this._cardPhoto.src=this._link,this._cardPhoto.alt=this._name,this._cardHeading=this._element.querySelector(".card__title"),this._cardHeading.textContent=this._name,this._likeButton=this._element.querySelector(".card__like"),this._deleteButton=this._element.querySelector(".card__delete-button"),this.likeCounter(),this.checkOwner(),this._setEventListeners(),this._element}},{key:"likeCounter",value:function(){}},{key:"checkOwner",value:function(){this._ownerId||this._deleteButton.classList.add("card__delete-button_hidden")}},{key:"addLike",value:function(){}},{key:"removeLike",value:function(){}},{key:"_handleLike",value:function(){this._likeButton.classList.toggle("card__like_active")}},{key:"_handleDelete",value:function(){this._element.remove(),this._element=null}},{key:"_setEventListeners",value:function(){var t=this,e=m.querySelector(".popup__button");this._likeButton.addEventListener("click",(function(){t._handleLike()})),this._deleteButton.addEventListener("click",(function(){tt.open()})),this._cardPhoto.addEventListener("click",(function(){t.handleCardClick()})),e.addEventListener("click",(function(t){t.preventDefault(),tt.close(),_handleDelete()}))}}])&&w(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function j(t){return j="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},j(t)}function P(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,E(o.key),o)}}function E(t){var e=function(t,e){if("object"!==j(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var o=n.call(t,"string");if("object"!==j(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"===j(e)?e:String(e)}var O=function(){function t(e){var n=this;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),function(t,e,n){(e=E(e))in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n}(this,"_handleEscClose",(function(t){"Escape"===t.key&&n.close()})),this._popup=e}var e,n;return e=t,(n=[{key:"open",value:function(){this._popup.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscClose)}},{key:"close",value:function(){this._popup.classList.remove("popup_opened"),document.removeEventListener("keydown",this._handleEscClose)}},{key:"setEventListeners",value:function(){var t=this;this._popup.addEventListener("click",(function(e){(e.target.classList.contains("popup_opened")||e.target.classList.contains("popup__button-close"))&&t.close()}))}}])&&P(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function L(t){return L="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},L(t)}function C(t,e){return C=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},C(t,e)}function T(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}function I(){return I="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,n){var o=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=q(t)););return t}(t,e);if(o){var r=Object.getOwnPropertyDescriptor(o,e);return r.get?r.get.call(arguments.length<3?t:n):r.value}},I.apply(this,arguments)}function q(t){return q=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},q(t)}function B(t){var e=function(t,e){if("object"!==L(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var o=n.call(t,"string");if("object"!==L(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"===L(e)?e:String(e)}var V=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&C(t,e)}(i,t);var e,n,o,r=(n=i,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=q(n);if(o){var r=q(this).constructor;t=Reflect.construct(e,arguments,r)}else t=e.apply(this,arguments);return function(t,e){if(e&&("object"===L(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return T(t)}(this,t)});function i(t){var e,n;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,i),function(t,e,n){(e=B(e))in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n}(T(n=r.call(this,t)),"open",(function(t){I((e=T(n),q(i.prototype)),"open",e).call(e),n._popupIncreasePhoto.src=t.link,n._popupIncreasePhoto.alt=t.name,n._popupIncreaseHeading.textContent=t.name})),n._popupIncreasePhoto=n._popup.querySelector(".popup-increase__photo"),n._popupIncreaseHeading=n._popup.querySelector(".popup-increase__heading"),n}return e=i,Object.defineProperty(e,"prototype",{writable:!1}),e}(O);function x(t){return x="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},x(t)}function R(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,(void 0,r=function(t,e){if("object"!==x(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var o=n.call(t,"string");if("object"!==x(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(o.key),"symbol"===x(r)?r:String(r)),o)}var r}function F(){return F="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,n){var o=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=U(t)););return t}(t,e);if(o){var r=Object.getOwnPropertyDescriptor(o,e);return r.get?r.get.call(arguments.length<3?t:n):r.value}},F.apply(this,arguments)}function D(t,e){return D=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},D(t,e)}function U(t){return U=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},U(t)}var A=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&D(t,e)}(a,t);var e,n,o,r,i=(o=a,r=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=U(o);if(r){var n=U(this).constructor;t=Reflect.construct(e,arguments,n)}else t=e.apply(this,arguments);return function(t,e){if(e&&("object"===x(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(this,t)});function a(t){var e,n=t.popup,o=t.submitForm;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,a),(e=i.call(this,n))._submitForm=o,e._form=e._popup.querySelector(".popup__form"),e._inputList=e._form.querySelectorAll(".popup__item"),e}return e=a,(n=[{key:"_getInputValues",value:function(){var t={};return this._inputList.forEach((function(e){var n=e.value,o=e.name;t[o]=n})),t}},{key:"setEventListeners",value:function(){var t=this;F(U(a.prototype),"setEventListeners",this).call(this),this._form.addEventListener("submit",(function(e){e.preventDefault();var n=t._getInputValues();t._submitForm(n),t.close()}))}},{key:"close",value:function(){F(U(a.prototype),"close",this).call(this),K.resetValidation()}}])&&R(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),a}(O);function H(t){return H="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},H(t)}function N(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,(void 0,r=function(t,e){if("object"!==H(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var o=n.call(t,"string");if("object"!==H(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(o.key),"symbol"===H(r)?r:String(r)),o)}var r}var M=function(){function t(e,n){var o=e.renderer;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._renderer=o,this._container=document.querySelector(n)}var e,n;return e=t,(n=[{key:"addItem",value:function(t){this._container.prepend(t)}}])&&N(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function z(t){return z="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},z(t)}function G(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,(void 0,r=function(t,e){if("object"!==z(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var o=n.call(t,"string");if("object"!==z(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(o.key),"symbol"===z(r)?r:String(r)),o)}var r}var J=function(){function t(e){var n=e.name,o=e.description,r=e.avatar;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._name=n,this._description=o,this._avatar=r}var e,n;return e=t,(n=[{key:"getUserInfo",value:function(){return{profileName:this._name.textContent,profileDescription:this._description.textContent}}},{key:"setUserInfo",value:function(t){this._name.textContent=t.name,this._description.textContent=t.job}},{key:"setAvatarInfo",value:function(t){this._avatar.src=t}}])&&G(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function W(t){return W="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},W(t)}function Y(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,(void 0,r=function(t,e){if("object"!==W(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var o=n.call(t,"string");if("object"!==W(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(o.key),"symbol"===W(r)?r:String(r)),o)}var r}fetch("https://mesto.nomoreparties.co/v1/cohort-65/users/me",{method:"PATCH",headers:{authorization:"9783f066-fc5b-47ba-8b84-b37b6039aee0","Content-Type":"application/json"},body:JSON.stringify({name:"Salynochka",about:"Smart and exclusive"})}).then((function(t){return t.json()})),fetch("https://mesto.nomoreparties.co/v1/cohort-65/cards",{headers:{authorization:"9783f066-fc5b-47ba-8b84-b37b6039aee0"}}).then((function(t){return t.json()})).then((function(t){console.log(t)})),fetch("https://mesto.nomoreparties.co/v1/cohort-65/cards",{method:"POST",headers:{authorization:"9783f066-fc5b-47ba-8b84-b37b6039aee0","Content-Type":"application/json"},body:JSON.stringify({name:"Waterton park",link:"https://images.unsplash.com/photo-1683130461729-9b91e65b6997?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=2832&q=80"})}).then((function(t){return t.json()})).then((function(t){console.log(t)})),fetch("https://mesto.nomoreparties.co/v1/cohort-65/cards",{method:"POST",headers:{authorization:"9783f066-fc5b-47ba-8b84-b37b6039aee0","Content-Type":"application/json"},body:JSON.stringify({name:"Sydney",link:"https://images.unsplash.com/photo-1682834818789-fdd3fd6c93fe?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=928&q=80"})}),document.querySelector(".cards");var $=new(function(){function t(e,n){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._mainUrl=e,this._headers=n}var e,n;return e=t,(n=[{key:"getInitialCards",value:function(){fetch("".concat(this._mainUrl,"/cards"),{headers:this._headers}).then((function(t){return t.json}))}},{key:"createNewCard",value:function(t){fetch("".concat(this._mainUrl,"/cards/").concat(t),{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({value})}).then(et(t))}},{key:"removeCard",value:function(t){fetch("".concat(this._mainUrl,"/").concat(t),{method:"DELETE"}).then(this._checkStatus)}},{key:"_checkStatus",value:function(t){return t.ok?t.json():Promise.reject("Ошибка: ".concat(t.status))}},{key:"getUserInfo",value:function(){fetch("".concat(this._mainUrl,"/users/me"),{method:"GET",headers:this._headers}).then(this._checkStatus)}},{key:"saveNewUserInformation",value:function(){}},{key:"addLikeCard",value:function(t){fetch("".concat(this._mainUrl,"/cards/cardId/likes"),{method:"PUT"}).then(this._checkStatus)}},{key:"deleteLikeCard",value:function(t){fetch("".concat(this._mainUrl,"/cards/cardId/likes"),{method:"DELETE"}).then(this._checkStatus)}},{key:"editAvatarPhoto",value:function(t){fetch("https://mesto.nomoreparties.co/v1/cohort-65/users/me/avatar",{method:"PATCH",headers:{authorization:"9783f066-fc5b-47ba-8b84-b37b6039aee0","Content-Type":"application/json"},body:JSON.stringify({avatar:t})}).then(this._checkStatus)}}])&&Y(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}())({mainUrl:"https://mesto.nomoreparties.co/v1/cohort-65",headers:{authorization:"9783f066-fc5b-47ba-8b84-b37b6039aee0","Content-Type":"application/json"}});$.getInitialCards();var K=new o(r,i),Q=new o(r,a),X=new o(r,u);K.enableValidation(),Q.enableValidation(),X.enableValidation(),b.addEventListener("click",(function(){var t=it.getUserInfo();c.value=t.profileName,l.value=t.profileDescription,ot.open()})),v.addEventListener("click",(function(){Q.toggleButtonState(),rt.open(),Q.resetValidation()})),p.addEventListener("click",(function(){X.toggleButtonState(),at.open(),X.resetValidation()}));var Z=new V(S);Z.setEventListeners();var tt=new O(m);tt.setEventListeners();var et=function(t){return new k(t,_,(function(){return Z.open(t)})).generateCard()},nt=new M({renderer:function(t){nt.addItem(et(t))}},".cards"),ot=new A({popup:y,submitForm:function(t){it.setUserInfo(t)}}),rt=new A({popup:d,submitForm:function(t){rt.renderLoading(!0),$.createNewCard(t).then((function(t){nt.addItem(et(t))})).catch((function(t){return console.error("Ошибка: ".concat(t))})).finally((function(){return rt.renderLoading(!1)})),rt.close(),a.reset()}});ot.setEventListeners(),rt.setEventListeners();var it=new J({name:s,description:f,avatar:p}),at=new A({popup:h,submitForm:function(){it.setAvatarInfo(updateProfileInput)}});at.setEventListeners()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,